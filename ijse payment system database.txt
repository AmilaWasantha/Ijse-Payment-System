drop database ijsepaymentsystem;
create database ijsepaymentsystem;



use ijsepaymentsystem;

CREATE TABLE USER(
	USER_NAME VARCHAR(100)NOT NULL,
	PASSWORD VARCHAR(100)
);

CREATE TABLE COURSE(
	COURSE_ID VARCHAR(100) NOT NULL,
	COURSE_Name VARCHAR(100) NOT NULL,
	COURSE_TYPE VARCHAR(100)NOT NULL,
	COURSE_FEE  DECIMAL (65)NOT NULL,
	LATEPAYMENT INT (100)NOT NULL,
	DURATION VARCHAR(100)NOT NULL,
	DISCOUNT VARCHAR (100)NOT NULL,
	CONSTRAINT PRIMARY KEY(COURSE_ID)
);

CREATE TABLE GARDIAN(
	GARDIAN_ID VARCHAR(100) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	MOBILE_1 VARCHAR(100) NOT NULL,
	MOBILE_2 VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL,
	DESIGNATION VARCHAR(100) NOT NULL,
	WORKING_PLACE VARCHAR(100) NOT NULL,
	ADDRESS VARCHAR(100) NOT NULL,
	CONSTRAINT PRIMARY KEY(GARDIAN_ID)
	
);


CREATE TABLE STUDENT(
	STUDENT_ID VARCHAR(100) NOT NULL,
	GARDIAN_ID VARCHAR(100) NOT NULL,
	NAME_WITH_INITIAL VARCHAR(100) NOT NULL,
	ADDRESS VARCHAR(100) NOT NULL,
	CITY VARCHAR(100) NOT NULL,
	HOME_TEL VARCHAR(100) NOT NULL,
	MOBILE_TEL VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL,
	NIC VARCHAR(100) NOT NULL,
	B_DAY VARCHAR(100) NOT NULL,
	GENDER VARCHAR(100) NOT NULL,
	UNIVERSITY VARCHAR(100) NOT NULL,
	EDUCATION VARCHAR(100) NOT NULL,
	CONSTRAINT PRIMARY KEY(STUDENT_ID),
	CONSTRAINT FOREIGN KEY (GARDIAN_ID) REFERENCES GARDIAN(GARDIAN_ID) on update cascade on delete cascade
);

CREATE TABLE BATCH(
	BATCH_ID VARCHAR(100) NOT NULL,
	BATCH_NAME VARCHAR(100) NOT NULL,
	DATE VARCHAR(100) NOT NULL,
	TYPE VARCHAR(100)NOT NULL,
	STATUS VARCHAR(100) NOT NULL,
	CONSTRAINT PRIMARY KEY(BATCH_ID)
	
);

CREATE TABLE BATCH_TRANSFER(
	BATCH_TRANSFER_ID VARCHAR(100) NOT NULL,
	STUDENT_ID VARCHAR(100) NOT NULL,
	BATCH_ID VARCHAR(100) NOT NULL,
	REASON VARCHAR(100) NOT NULL,
	DATE VARCHAR(100) NOT NULL,
	NEW_BATCH VARCHAR(100) NOT NULL,
	TRANSER_FEE DECIMAL(65) NOT NULL,
	CONSTRAINT PRIMARY KEY(BATCH_TRANSFER_ID),
	CONSTRAINT FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID)on update cascade on delete cascade,
	CONSTRAINT FOREIGN KEY (BATCH_ID)REFERENCES BATCH(BATCH_ID)on update cascade on delete cascade
	
);

CREATE TABLE REGISTRATION(
	REGISTRATION_ID VARCHAR(100) NOT NULL,
	STUDENT_ID VARCHAR(100) NOT NULL,
	BATCH_ID VARCHAR(100) NOT NULL,
	REGISTRATION_DATE VARCHAR(100) NOT NULL,
	BATCH_START_DATE VARCHAR(100)NOT NULL,
	FEE DECIMAL(65) NOT NULL,
	STATUS VARCHAR(100)NOT NULL,
	CONSTRAINT PRIMARY KEY(REGISTRATION_ID),
	CONSTRAINT FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID)on update cascade on delete cascade,
	CONSTRAINT FOREIGN KEY (BATCH_ID)REFERENCES BATCH(BATCH_ID)on update cascade on delete cascade
);

CREATE TABLE PAYMENT(
	PAYMENT_ID VARCHAR(100) NOT NULL,
	REGISTRATION_ID VARCHAR(100)NOT NULL,
	STUDENT_ID VARCHAR(100)NOT NULL,
	STUDENT_NAME VARCHAR(100)NOT NULL,
	COURSE_ID VARCHAR(100) NOT NULL,
	COURSE_NAME VARCHAR(100)NOT NULL,
	BATCH_ID VARCHAR(100) NOT NULL,
	BATCH_NAME VARCHAR(100)NOT NULL,
	FULL_AMOUNT double(10,2)NOT NULL,
	PAY_AMOUNT VARCHAR(100)NOT NULL,
	BALANCE VARCHAR(100)NOT NULL,
	PAYMENT_TYPE VARCHAR(100)NOT NULL,
	PAYMENT_DATE VARCHAR(100)NOT NULL,
	PAYMENT_PENDING_DATE VARCHAR(100)NOT NULL,
	DISCOUNT VARCHAR(100)NOT NULL,
	CONSTRAINT PRIMARY KEY(PAYMENT_ID),
	CONSTRAINT FOREIGN KEY (REGISTRATION_ID)REFERENCES REGISTRATION(REGISTRATION_ID)on update cascade on delete cascade,
	CONSTRAINT FOREIGN KEY (COURSE_ID)REFERENCES COURSE(COURSE_ID)on update cascade on delete cascade

);

CREATE TABLE COURSE_BATCH(
	COURSE_BATCH VARCHAR(100)NOT NULL,
	BATCH_ID VARCHAR(100) NOT NULL,
	COURSE_ID VARCHAR(100) NOT NULL,
	BATCH_NAME VARCHAR(100) NOT NULL,
	DATE VARCHAR(100) NOT NULL,
	TYPE VARCHAR(100)NOT NULL,
	STATUS VARCHAR(100) NOT NULL,
	CONSTRAINT PRIMARY KEY(COURSE_BATCH),
	CONSTRAINT FOREIGN KEY (COURSE_ID)REFERENCES COURSE(COURSE_ID)on update cascade on delete cascade,
	CONSTRAINT FOREIGN KEY (BATCH_ID)REFERENCES BATCH(BATCH_ID)on update cascade on delete cascade
	
);



payment system;
=======================

select b.BATCH_ID,b.COURSE_ID,b.BATCH_NAME,b.DATE,b.STATUS,c.COURSE_Name from batch b,course c where b.COURSE_ID=c.COURSE_ID;





select b.BATCH_ID,c.COURSE_ID,b.BATCH_NAME,b.DATE,b.STATUS ,c.COURSE_Name from batch b,course_batch bc ,course c where bc.BATCH_ID=b.BATCH_ID AND bc.COURSE_ID=c.COURSE_ID;


select s.STUDENT_ID,r.REGISTRATION_ID,r.BATCH_ID from student s,registration r where r.STUDENT_ID=s.STUDENT_ID AND s.STUDENT_ID='s001';


select s.STUDENT_ID,r.REGISTRATION_ID,r.BATCH_ID, from student s,registration r where r.STUDENT_ID=s.STUDENT_ID AND b.COURSE_ID, c.COURSE_Name from b.batch,c.course where r.BATCH_ID=b.BATCH_ID;


select s.STUDENT_ID,r.REGISTRATION_ID,b.BATCH_ID,b.COURSE_ID,c.COURSE_Name ,c.COURSE_TYPE from student s,registration r,batch b,course c where r.STUDENT_ID=s.STUDENT_ID AND s.STUDENT_ID='s001' AND r.BATCH_ID=b.BATCH_ID AND b.COURSE_ID=c.COURSE_ID;

select s.NAME_WITH_INITIAL, b.BATCH_ID ,r.REGISTRATION_ID,b.BATCH_NAME,s.STUDENT_ID,c.COURSE_Name,c.COURSE_ID,c.COURSE_Name,c.COURSE_TYPE from student s,registration r,batch b,course c,course_batch bc where r.STUDENT_ID=s.STUDENT_ID AND s.STUDENT_ID='S005' AND bc.BATCH_ID=b.BATCH_ID AND bc.COURSE_ID=c.COURSE_ID;

======================================================================================================================================================================================================
select s.STUDENT_ID, S.NAME_WITH_INITIAL,b.BATCH_ID ,b.BATCH_NAME  from registration r,batch b ,student s where r.STUDENT_ID=s.STUDENT_ID AND s.STUDENT_ID='S001' AND r.BATCH_ID=b.BATCH_ID; 

select  S.NAME_WITH_INITIAL,b.BATCH_ID ,b.BATH_TYPE,b.BATCH_NAME  from registration r,batch b ,student s where r.STUDENT_ID=s.STUDENT_ID AND s.STUDENT_ID='S001' AND r.BATCH_ID=b.BATCH_ID;

select  b.BATCH_ID,b.BATCH_NAME,c.COURSE_ID from batch b,course c,course_batch cb where cb.COURSE_ID=c.COURSE_ID AND c.COURSE_ID='C001' AND  cb.BATCH_ID=b.BATCH_ID;


select  b.BATCH_ID,b.STATUS,b.BATCH_NAME from batch b,course c,course_batch cb where cb.COURSE_ID=c.COURSE_ID AND c.COURSE_ID='C001' AND  cb.BATCH_ID=b.BATCH_ID;


mysql> select* from batch where BATCH_NAME='CMJD FULL' AND STATUS='Not Yet Started';


select s.STUDENT_ID,s.NAME_WITH_INITIAL,r.REGISTRATION_ID, b.BATCH_ID,b.BATCH_NAME,c.COURSE_ID from student s, registration r,batch b,course c,course_batch cb where r.STUDENT_ID=s.STUDENT_ID AND S.STUDENT_ID='s001' AND cb.COURSE_ID=c.COURSE_ID  AND  cb.BATCH_ID=b.BATCH_ID;


mysql> select  from batch where BATCH_NAME='CMJD FULL' AND STATUS='Not Yet Started';

select c.COURSE_ID, c.COURSE_Name,cb.COURSE_ID from course c, course_batch cb where cb.COURSE_ID =c.COURSE_ID  AND c.COURSE_ID='C001';


select s.STUDENT_ID, s.NAME_WITH_INITIAL,
c.COURSE_ID,c.COURSE_Name,c.COURSE_FEE,c.LATEPAYMENT,c.DISCOUNT,cb.BATCH_ID,cb.BATCH_NAME,r.REGISTRATION_ID,
r.BATCH_START_DATE from student s,batch b, course_batch cb,course c,
registration r where r.STUDENT_ID=s.STUDENT_ID AND
 s.STUDENT_ID='S001' AND r.BATCH_ID=b.BATCH_ID AND cb.BATCH_ID=b.BATCH_ID
 AND cb.COURSE_ID=c.COURSE_ID;





select s.STUDENT_ID, s.NAME_WITH_INITIAL, r.REGISTRATION_ID,cb.BATCH_ID,cb.DATE,cb.BATCH_NAME, c.COURSE_Name,c.COURSE_ID,c.COURSE_FEE,c.DISCOUNT,c.LATEPAYMENT from student s,batch b, course_batch cb,course c,registration r where r.STUDENT_ID=s.STUDENT_ID AND s.STUDENT_ID='S002' AND r.BATCH_ID=b.BATCH_ID AND cb.BATCH_ID=b.BATCH_ID AND cb.COURSE_ID=c.COURSE_ID;



select s.STUDENT_ID, s.NAME_WITH_INITIAL, r.REGISTRATION_ID,cb.BATCH_ID,r.BATCH_START_DATE,cb.BATCH_NAME, c.COURSE_Name,c.COURSE_ID,c.COURSE_FEE,c.DISCOUNT,c.LATEPAYMENT from student s,batch b, course_batch cb,course c,registration r where cb.COURSE_ID=c.COURSE_ID AND c.COURSE_ID='c004' AND r.BATCH_ID=b.BATCH_ID AND cb.BATCH_ID=b.BATCH_ID  AND r.STUDENT_ID=s.STUDENT_ID AND s.STUDENT_ID='S001';

select p.STUDENT_ID,p.COURSE_ID  from payment p where p.STUDENT_ID=p.COURSE_ID AND P.STUDENT_ID='S001' AND P.COURSE_ID ='C004';


select p.PAYMENT_ID,p.REGISTRATION_ID, p.STUDENT_ID,p.STUDENT_NAME,p.COURSE_ID ,p.COURSE_NAME,p.BATCH_ID,p.BATCH_NAME,p.FULL_AMOUNT,p.PAY_AMOUNT,p.BALANCE,p.PAYMENT_TYPE,p.PAYMENT_DATE,p.PAYMENT_PENDING_DATE,DISCOUNT from payment p where p.STUDENT_ID='S001' AND p.COURSE_NAME='Web design';


select p.REGISTRATION_ID, p.STUDENT_ID,p.STUDENT_NAME,p.COURSE_ID ,p.COURSE_NAME,p.BATCH_ID,p.BATCH_NAME,p.FULL_AMOUNT,p.PAY_AMOUNT,p.BALANCE,p.PAYMENT_TYPE,p.PAYMENT_PENDING_DATE,DISCOUNT from payment p where p.STUDENT_ID='S001' AND p.COURSE_ID ='C004';  txtPendinDate










select s.STUDENT_ID, s.NAME_WITH_INITIAL, r.REGISTRATION_ID,cb.BATCH_ID,r.BATCH_START_DATE,cb.BATCH_NAME, c.COURSE_Name,c.COURSE_ID,c.COURSE_FEE,c.DISCOUNT,c.LATEPAYMENT from student s,batch b, course_batch cb,course c,registration r where cb.COURSE_ID=c.COURSE_ID AND c.COURSE_Name='DEP' AND r.BATCH_ID=b.BATCH_ID AND cb.BATCH_ID=b.BATCH_ID  AND r.STUDENT_ID=s.STUDENT_ID AND s.STUDENT_ID='S001';

97361234v